[{
  "op": "core/text-transform",
  "description": "Text transform on cells in column _ - betreff - betreff using expression grel:replace(value,/<\\/?\\w+((\\s+\\w+(\\s*=\\s*(?:\".*?\"|'.*?'|[^'\">\\s]+))?)+\\s*|\\s*)\\/?>/,'')",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "_ - betreff - betreff",
  "expression": "grel:replace(value,/<\\/?\\w+((\\s+\\w+(\\s*=\\s*(?:\".*?\"|'.*?'|[^'\">\\s]+))?)+\\s*|\\s*)\\/?>/,'')",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column _ - schlagwort - schlagwort using expression grel:replace(value,/<\\/?\\w+((\\s+\\w+(\\s*=\\s*(?:\".*?\"|'.*?'|[^'\">\\s]+))?)+\\s*|\\s*)\\/?>/,'')",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "_ - schlagwort - schlagwort",
  "expression": "grel:replace(value,/<\\/?\\w+((\\s+\\w+(\\s*=\\s*(?:\".*?\"|'.*?'|[^'\">\\s]+))?)+\\s*|\\s*)\\/?>/,'')",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column _ - behandlung - behandlung using expression grel:replace(value,/<\\/?\\w+((\\s+\\w+(\\s*=\\s*(?:\".*?\"|'.*?'|[^'\">\\s]+))?)+\\s*|\\s*)\\/?>/,'')",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "_ - behandlung - behandlung",
  "expression": "grel:replace(value,/<\\/?\\w+((\\s+\\w+(\\s*=\\s*(?:\".*?\"|'.*?'|[^'\">\\s]+))?)+\\s*|\\s*)\\/?>/,'')",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/column-split",
  "description": "Split column _ - behandlung - behandlung by separator",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "_ - behandlung - behandlung",
  "guessCellType": false,
  "removeOriginalColumn": true,
  "mode": "separator",
  "separator": "Drs 16/",
  "regex": false,
  "maxColumns": 0
}, {
  "op": "core/column-split",
  "description": "Split column _ - behandlung - behandlung 1 by separator",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "_ - behandlung - behandlung 1",
  "guessCellType": false,
  "removeOriginalColumn": true,
  "mode": "separator",
  "separator": "und Antw",
  "regex": false,
  "maxColumns": 0
}, {
  "op": "core/column-rename",
  "description": "Rename column _ - behandlung - behandlung 2 to Drucksache",
  "oldColumnName": "_ - behandlung - behandlung 2",
  "newColumnName": "Drucksache"
}, {
  "op": "core/column-rename",
  "description": "Rename column _ - behandlung - behandlung 1 2 to Ministerium",
  "oldColumnName": "_ - behandlung - behandlung 1 2",
  "newColumnName": "Ministerium"
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column _ - behandlung - behandlung 1 1 using expression grel:value.replace(\"Dr. \",\"\")",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "_ - behandlung - behandlung 1 1",
  "expression": "grel:value.replace(\"Dr. \",\"\")",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column _ - behandlung - behandlung 1 1 using expression grel:value.replace(\"Grünen\",\"Grüne\").replace(\"Bündnis 90/Die\",\"\")",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "_ - behandlung - behandlung 1 1",
  "expression": "grel:value.replace(\"Grünen\",\"Grüne\").replace(\"Bündnis 90/Die\",\"\")",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/column-addition",
  "description": "Create column mehrere at index 3 based on column _ - behandlung - behandlung 1 1 using expression grel:\"Ja\"",
  "engineConfig": {
    "mode": "row-based",
    "facets": [{
      "mode": "text",
      "caseSensitive": false,
      "query": "u.a.",
      "name": "_ - behandlung - behandlung 1 1",
      "type": "text",
      "columnName": "_ - behandlung - behandlung 1 1"
    }]
  },
  "newColumnName": "mehrere",
  "columnInsertIndex": 3,
  "baseColumnName": "_ - behandlung - behandlung 1 1",
  "expression": "grel:\"Ja\"",
  "onError": "set-to-blank"
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column _ - behandlung - behandlung 1 1 using expression grel:value.replace(\"u.a. \",\"\")",
  "engineConfig": {
    "mode": "row-based",
    "facets": [{
      "mode": "text",
      "caseSensitive": false,
      "query": "u.a.",
      "name": "_ - behandlung - behandlung 1 1",
      "type": "text",
      "columnName": "_ - behandlung - behandlung 1 1"
    }]
  },
  "columnName": "_ - behandlung - behandlung 1 1",
  "expression": "grel:value.replace(\"u.a. \",\"\")",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column _ - behandlung - behandlung 1 1 using expression grel:value.replace(\"Daniel Lede Abal\",\"Daniel Lede-Abal\")",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "_ - behandlung - behandlung 1 1",
  "expression": "grel:value.replace(\"Daniel Lede Abal\",\"Daniel Lede-Abal\")",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column _ - behandlung - behandlung 1 1 using expression grel:value.replace(\"Lars Patrick Berg\",\"Lars-Patrick Berg\")",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "_ - behandlung - behandlung 1 1",
  "expression": "grel:value.replace(\"Lars Patrick Berg\",\"Lars-Patrick Berg\")",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column _ - behandlung - behandlung 1 1 using expression grel:value.replace(\"Hans Peter Stauch\",\"Hans-Peter Stauch\")",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "_ - behandlung - behandlung 1 1",
  "expression": "grel:value.replace(\"Hans Peter Stauch\",\"Hans-Peter Stauch\")",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column _ - behandlung - behandlung 1 1 using expression grel:value.replace(\"Arnulf Freiherr von Eyb\",\"Arnuf-Freiherr-von Eyb\")",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "_ - behandlung - behandlung 1 1",
  "expression": "grel:value.replace(\"Arnulf Freiherr von Eyb\",\"Arnuf-Freiherr-von Eyb\")",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/column-split",
  "description": "Split column _ - behandlung - behandlung 1 1 by separator",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "_ - behandlung - behandlung 1 1",
  "guessCellType": true,
  "removeOriginalColumn": true,
  "mode": "separator",
  "separator": " ",
  "regex": false,
  "maxColumns": 0
}, {
  "op": "core/column-removal",
  "description": "Remove column _ - behandlung - behandlung 1 1 5",
  "columnName": "_ - behandlung - behandlung 1 1 5"
}, {
  "op": "core/column-removal",
  "description": "Remove column _ - behandlung - behandlung 1 1 6",
  "columnName": "_ - behandlung - behandlung 1 1 6"
}, {
  "op": "core/column-removal",
  "description": "Remove column _ - behandlung - behandlung 1 1 7",
  "columnName": "_ - behandlung - behandlung 1 1 7"
}, {
  "op": "core/column-removal",
  "description": "Remove column _ - behandlung - behandlung 1 1 8",
  "columnName": "_ - behandlung - behandlung 1 1 8"
}, {
  "op": "core/column-rename",
  "description": "Rename column _ - betreff - betreff to Betreff",
  "oldColumnName": "_ - betreff - betreff",
  "newColumnName": "Betreff"
}, {
  "op": "core/column-rename",
  "description": "Rename column _ - schlagwort - schlagwort to Schlagwort",
  "oldColumnName": "_ - schlagwort - schlagwort",
  "newColumnName": "Schlagwort"
}, {
  "op": "core/column-rename",
  "description": "Rename column _ - behandlung - behandlung 1 1 1 to Vorname",
  "oldColumnName": "_ - behandlung - behandlung 1 1 1",
  "newColumnName": "Vorname"
}, {
  "op": "core/column-rename",
  "description": "Rename column _ - behandlung - behandlung 1 1 2 to Nachname",
  "oldColumnName": "_ - behandlung - behandlung 1 1 2",
  "newColumnName": "Nachname"
}, {
  "op": "core/column-rename",
  "description": "Rename column _ - behandlung - behandlung 1 1 3 to Fraktion",
  "oldColumnName": "_ - behandlung - behandlung 1 1 3",
  "newColumnName": "Fraktion"
}, {
  "op": "core/column-rename",
  "description": "Rename column _ - behandlung - behandlung 1 1 4 to Datum",
  "oldColumnName": "_ - behandlung - behandlung 1 1 4",
  "newColumnName": "Datum"
}, {
  "op": "core/column-addition",
  "description": "Create column Name at index 3 based on column Vorname using expression grel:cells[\"Vorname\"].value + \" \" + cells[\"Nachname\"].value",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "newColumnName": "Name",
  "columnInsertIndex": 3,
  "baseColumnName": "Vorname",
  "expression": "grel:cells[\"Vorname\"].value + \" \" + cells[\"Nachname\"].value",
  "onError": "set-to-blank"
}, {
  "op": "core/column-removal",
  "description": "Remove column Vorname",
  "columnName": "Vorname"
}, {
  "op": "core/column-removal",
  "description": "Remove column Nachname",
  "columnName": "Nachname"
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column Name using expression grel:value.replace(\"Arnulf-Freiherr-von Eyb\",\"Arnuf Freiherr von Eyb\")",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "Name",
  "expression": "grel:value.replace(\"Arnulf-Freiherr-von Eyb\",\"Arnuf Freiherr von Eyb\")",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column Betreff using expression value.trim()",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "Betreff",
  "expression": "value.trim()",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column Schlagwort using expression value.trim()",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "Schlagwort",
  "expression": "value.trim()",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column Name using expression value.trim()",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "Name",
  "expression": "value.trim()",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column Fraktion using expression value.trim()",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "Fraktion",
  "expression": "value.trim()",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column Datum using expression value.trim()",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "Datum",
  "expression": "value.trim()",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column mehrere using expression value.trim()",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "mehrere",
  "expression": "value.trim()",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column Ministerium using expression value.trim()",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "Ministerium",
  "expression": "value.trim()",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column Drucksache using expression value.trim()",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "Drucksache",
  "expression": "value.trim()",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column Name using expression value.replace(/\\s+/,' ')",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "Name",
  "expression": "value.replace(/\\s+/,' ')",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column Fraktion using expression value.replace(/\\s+/,' ')",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "Fraktion",
  "expression": "value.replace(/\\s+/,' ')",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column Name using expression grel:value.replace(\"Arnuf-Freiherr-von Eyb\",\"Arnulf Freiherr von Eyb\")",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "Name",
  "expression": "grel:value.replace(\"Arnuf-Freiherr-von Eyb\",\"Arnulf Freiherr von Eyb\")",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column Name using expression grel:value.replace(\"Hans-Peter Stauch\",\"Hans Peter Stauch\")",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "Name",
  "expression": "grel:value.replace(\"Hans-Peter Stauch\",\"Hans Peter Stauch\")",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column Name using expression grel:value.replace(\"Lars-Patrick Berg\",\"Lars Patrick Berg\")",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "Name",
  "expression": "grel:value.replace(\"Lars-Patrick Berg\",\"Lars Patrick Berg\")",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}, {
  "op": "core/text-transform",
  "description": "Text transform on cells in column Name using expression grel:value.replace(\"Daniel Lede-Abal\",\"Daniel Lede Abal\")",
  "engineConfig": {
    "mode": "row-based",
    "facets": []
  },
  "columnName": "Name",
  "expression": "grel:value.replace(\"Daniel Lede-Abal\",\"Daniel Lede Abal\")",
  "onError": "keep-original",
  "repeat": false,
  "repeatCount": 10
}]